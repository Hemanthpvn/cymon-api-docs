{
    "docs": [
        {
            "location": "/", 
            "text": "About\n\n\nCymon is the largest tracker and aggregator of security reports.\nIt ingests events about malware, botnets, phishing, spam and other malicious activities from almost 200 sources daily.\nOn average, more than 15,000 unique IPs and 50,000 events are processed each day.\n\n\n\n\nCymon API v2.0\n is coming soon!\n\n\n\n\nAuthentication\n\n\nCymon allows anonymous API requests, but they will be rate-limited. You will need to authenticate if you want higher access rates.\n\n\nAuthenticated request made to the Cymon API needs to include your access key in the \nAuthorization\n HTTP header.\nThe key should be prefixed by the string literal \"Token\", with whitespace separating the two strings. For example:\n\n\nAuthorization: Token 9944b09199c62bcf9418ad846dd0e4bbdfc6ee4b\n\n\n\n\nUnauthenticated responses that are denied permission will result in an \nHTTP 401 Unauthorized\n response with an appropriate \nWWW-Authenticate\n header.\nFor example:\n\n\nWWW-Authenticate: Token\n\n\n\n\nThe \ncurl\n command line tool may be useful for testing token authenticated APIs. For example:\n\n\ncurl -X GET https://cymon.io/api/nexus/v1/blacklist/ip/malware/ -H 'Authorization: Token 9944b09199c62bcf9418ad846dd0e4bbdfc6ee4b'\n\n\n\n\n\n\nYou can register for an API key \nhere\n\n\n\n\nHTTP Status Codes\n\n\n\n\n\n\nCode\n\n\nDescription\n\n\n\n\n\n\n\n200\n\n\nOk Success\n\n\n\n\n\n\n\n401\n\n\nUnauthorized: Access is denied due to invalid token.\n\n\n\n\n\n\n\n404\n\n\nNot Found: The request was invalid or cannot be otherwise served.\n\n\n\n\n\n\n\n429\n\n\nToo Many Requests: Rate limit exceeded.\n\n\n\n\n\n\n\n500\n\n\nAPI Error\n\n\n\n\n\n\n\nExample Error Response:\n\n\nHTTP 404 Not Found\nContent-Type: application/json\nVary: Accept\nAllow: GET, HEAD, OPTIONS\n\n{\n    \ndetail\n: \nNot found.\n\n}\n\n\n\n\nRate Limits\n\n\n\n\n\n\nConnection Type\n\n\nRate\n\n\n\n\n\n\nAnonymous User\n\n\n500/day\n\n\n\n\n\n\nAuthenticated User\n\n\n1000/day\n\n\n\n\n\n\n\n\n\nTo request for a limit increase, please contact \ninfo@cymon.io\n\n\n\n\nExample Rate Limit Error:\n\n\nHTTP 429\nRetry-After: 86397\nContent-Type: application/json\nVary: Accept\nAllow: GET, HEAD, OPTIONS\n\n{\n    \ndetail\n: \nRequest was throttled. Expected available in 86397.0 seconds.\n\n}\n\n\n\n\nAPIs\n\n\n\n\nYou can interact and test the APIs in your browser:\n\n\nhttps://cymon.io/api/docs/\n\n\n\n\nIP Lookup\n\n\nProvides IP object details\n\n\nGET /api/nexus/v1/ip/{addr}/\n\n\n\n\nParameters\n\n\n\n    \n\n        \n\n            \nParameter\n\n            \nParameter Type\n\n            \nData Type\n\n            \nRequired\n\n            \nDescription\n\n        \n\n    \n\n    \n\n        \n\n            \naddr\n\n            \npath\n\n            \nstring\n\n            \nYes\n\n            \nIP address\n\n        \n\n    \n\n\n\n\n\nSample response body\n\n\n{\n    \naddr\n: \n5.248.253.190\n,\n    \ncreated\n: \n2015-06-19T22:11:26\n,\n    \nupdated\n: \n2015-06-19T22:11:43\n,\n    \nsources\n: [\n        \npbl.spamhaus.org\n,\n        \nzen.spamhaus.org\n,\n        \nv6.fullbogons.cymru.com\n,\n        \ntor.ahbl.org\n,\n        \ndnsbl.ahbl.org\n,\n        \nvirustotal.com\n,\n        \nurlquery.net\n\n    ],\n    \nevents\n: \nhttps://cymon.io/api/nexus/v1/ip/5.248.253.190/events\n,\n    \ndomains\n: \nhttps://cymon.io/api/nexus/v1/ip/5.248.253.190/domains\n,\n    \nurls\n: \nhttps://cymon.io/api/nexus/v1/ip/5.248.253.190/urls\n\n}\n\n\n\n\nHTTP Status Codes\n\n\n\n    \n\n        \n\n            \nStatus Code\n\n            \nReason\n\n        \n\n    \n\n    \n\n        \n\n            \n200\n\n            \nIP found in database\n\n        \n\n        \n\n            \n404\n\n            \nIP not found\n\n        \n\n        \n\n            \n429\n\n            \nRequest throttled\n\n        \n\n    \n\n\n\n\n\nIP Events\n\n\nProvides security event resources\n\n\nGET /api/nexus/v1/ip/{addr}/events/\n\n\n\n\nParameters\n\n\n\n    \n\n        \n\n            \nParameter\n\n            \nParameter Type\n\n            \nData Type\n\n            \nRequired\n\n            \nDescription\n\n        \n\n    \n\n    \n\n        \n\n            \naddr\n\n            \npath\n\n            \nstring\n\n            \nYes\n\n            \nIP address\n\n        \n\n    \n\n\n\n\n\nSample response body\n\n\n{\n    \ncount\n: 7,\n    \nnext\n: null,\n    \nprevious\n: null,\n    \nresults\n: [\n        {\n            \ntitle\n: \nIP blacklisted by zen.spamhaus.org\n,\n            \ndescription\n: null,\n            \ndetails_url\n: null,\n            \ncreated\n: \n2015-06-19T22:11:29\n,\n            \nupdated\n: \n2015-06-19T22:11:29\n,\n            \ntag\n: \ndnsbl\n\n        },\n        {\n            \ntitle\n: \nMalware reported by VirusTotal.com\n,\n            \ndescription\n: \nScan date: 2015-06-19 05:35:57\\nVirusTotal score: 4/63\\nDomain: 5.248.253.190\\nMalware URL: hxxp://5.248.253.190/pod1/mobile7.exe\\n\n,\n            \ndetails_url\n: \nhttps://www.virustotal.com/en/ip-address/5.248.253.190/information/\n,\n            \ncreated\n: \n2015-06-19T05:35:57\n,\n            \nupdated\n: \n2015-06-19T22:11:43\n,\n            \ntag\n: \nmalware\n\n        },\n        ...\n    ]\n}\n\n\n\n\nHTTP Status Codes\n\n\n\n    \n\n        \n\n            \nStatus Code\n\n            \nReason\n\n        \n\n    \n\n    \n\n        \n\n            \n200\n\n            \nIP found in database\n\n        \n\n        \n\n            \n404\n\n            \nIP not found\n\n        \n\n        \n\n            \n429\n\n            \nRequest throttled\n\n        \n\n    \n\n\n\n\n\nIP Domains\n\n\nProvides domains associated with an IP\n\n\nGET /api/nexus/v1/ip/{addr}/domains/\n\n\n\n\nParameters\n\n\n\n    \n\n        \n\n            \nParameter\n\n            \nParameter Type\n\n            \nData Type\n\n            \nRequired\n\n            \nDescription\n\n        \n\n    \n\n    \n\n        \n\n            \naddr\n\n            \npath\n\n            \nstring\n\n            \nYes\n\n            \nIP address\n\n        \n\n    \n\n\n\n\n\nSample response body\n\n\n{\n  \ncount\n: 1,\n  \nnext\n: null,\n  \nprevious\n: null,\n  \nresults\n: [\n    {\n      \nname\n: \nshower-radio.com\n,\n      \ncreated\n: \n2015-10-19T16:22:58Z\n,\n      \nupdated\n: \n2015-10-20T16:23:22Z\n\n    }\n  ]\n}\n\n\n\n\nHTTP Status Codes\n\n\n\n    \n\n        \n\n            \nStatus Code\n\n            \nReason\n\n        \n\n    \n\n    \n\n        \n\n            \n200\n\n            \nIP found in database\n\n        \n\n        \n\n            \n404\n\n            \nIP not found\n\n        \n\n        \n\n            \n429\n\n            \nRequest throttled\n\n        \n\n    \n\n\n\n\n\nIP URLs\n\n\nProvides URLs associated with an IP\n\n\nGET /api/nexus/v1/ip/{addr}/urls/\n\n\n\n\nParameters\n\n\n\n    \n\n        \n\n            \nParameter\n\n            \nParameter Type\n\n            \nData Type\n\n            \nRequired\n\n            \nDescription\n\n        \n\n    \n\n    \n\n        \n\n            \naddr\n\n            \npath\n\n            \nstring\n\n            \nYes\n\n            \nIP address\n\n        \n\n    \n\n\n\n\n\nSample response body\n\n\n{\n  \ncount\n: 1,\n  \nnext\n: null,\n  \nprevious\n: null,\n  \nresults\n: [\n    {\n      \nlocation\n: \nhttp://alfaqui.com/~buzon/21/09.exe\n,\n      \ncreated\n: \n2015-09-07T18:29:57Z\n,\n      \nupdated\n: \n2015-09-07T18:29:57Z\n\n    }\n  ]\n}\n\n\n\n\nHTTP Status Codes\n\n\n\n    \n\n        \n\n            \nStatus Code\n\n            \nReason\n\n        \n\n    \n\n    \n\n        \n\n            \n200\n\n            \nIP found in database\n\n        \n\n        \n\n            \n404\n\n            \nIP not found\n\n        \n\n        \n\n            \n429\n\n            \nRequest throttled\n\n        \n\n    \n\n\n\n\n\nIP Blacklist\n\n\nRetrieve list of IPs that are associated with certain tag\n\n\nGET /api/nexus/v1/blacklist/ip/{tag}/\n\n\n\n\nParameters\n\n\n\n    \n\n        \n\n            \nParameter\n\n            \nParameter Type\n\n            \nData Type\n\n            \nRequired\n\n            \nDescription\n\n        \n\n    \n\n    \n\n        \n\n            \ntag\n\n            \npath\n\n            \nstring\n\n            \nYes\n\n            \n\n            One of the following tags:\n\n            \n\n                \nmalware\n\n                \nbotnet\n\n                \nspam\n\n                \nphishing\n\n                \nmalicious activity\n\n                \nblacklist\n\n                \ndnsbl\n\n            \n\n            \n\n        \n\n        \n\n            \ndays\n\n            \nquery\n\n            \ninteger\n\n            \nNo\n\n            \nUse data collected since 1-3 days ago (default is 1)\n\n        \n\n    \n\n\n\n\n\nSample response body\n\n\n{\n    \ncount\n: 617,\n    \nnext\n: \nhttps://cymon.io/api/nexus/v1/blacklist/ip/malware/?days=1\noffset=10\n,\n    \nprevious\n: null,\n    \nresults\n: [\n        {\n            \naddr\n: \n42.115.158.45\n,\n            \nurl\n: \nhttps://cymon.io/api/nexus/v1/ip/42.115.158.45\n\n        },\n        {\n            \naddr\n: \n182.16.233.188\n,\n            \nurl\n: \nhttps://cymon.io/api/nexus/v1/ip/182.16.233.188\n\n        },\n        ...\n    ]\n}\n\n\n\n\nDomain Lookup\n\n\nProvides domain object detail\n\n\nGET /api/nexus/v1/domain/{name}\n\n\n\n\nParameters\n\n\n\n    \n\n        \n\n            \nParameter\n\n            \nParameter Type\n\n            \nData Type\n\n            \nRequired\n\n            \nDescription\n\n        \n\n    \n\n    \n\n        \n\n            \nname\n\n            \npath\n\n            \nstring\n\n            \nYes\n\n            \nDomain name\n\n        \n\n    \n\n\n\n\n\nSample response body\n\n\n{\n    \nname\n: \nhiepkute1970.zapto.org\n,\n    \ncreated\n: \n2015-07-07T14:14:11\n,\n    \nupdated\n: \n2015-07-07T14:14:11\n,\n    \nsources\n: [\n        \nmalwr.com\n\n    ],\n    \nips\n: [\n        \nhttps://cymon.io/api/nexus/v1/ip/42.115.158.45\n\n    ],\n    \nurls\n: []\n}\n\n\n\n\nDomain Blacklist\n\n\nRetrieve list of domains that are associated with certain tag\n\n\nGET /api/nexus/v1/blacklist/domain/{tag}/\n\n\n\n\nParameters\n\n\n\n    \n\n        \n\n            \nParameter\n\n            \nParameter Type\n\n            \nData Type\n\n            \nRequired\n\n            \nDescription\n\n        \n\n    \n\n    \n\n        \n\n            \ntag\n\n            \npath\n\n            \nstring\n\n            \nYes\n\n            \n\n            One of the following tags:\n\n            \n\n                \nmalware\n\n                \nbotnet\n\n                \nspam\n\n                \nphishing\n\n                \nmalicious activity\n\n                \nblacklist\n\n                \ndnsbl\n\n            \n\n            \n\n        \n\n        \n\n            \ndays\n\n            \nquery\n\n            \ninteger\n\n            \nNo\n\n            \nUse data collected since 1-3 days ago (default is 1)\n\n        \n\n    \n\n\n\n\n\nSample response body\n\n\n{\n    \ncount\n: 617,\n    \nnext\n: \nhttps://cymon.io/api/nexus/v1/blacklist/domain/malware/?offset=10\n,\n    \nprevious\n: null,\n    \nresults\n: [\n        {\n            \nname\n: \nadvertblocks.vitr.alawar.com\n,\n            \nurl\n: \nhttps://cymon.io/api/nexus/v1/domain/advertblocks.vitr.alawar.com\n\n        },\n        {\n            \nname\n: \nvitr.alawar.ru\n,\n            \nurl\n: \nhttps://cymon.io/api/nexus/v1/domain/vitr.alawar.ru\n\n        },\n        ...\n    ]\n}\n\n\n\n\nURL Lookup\n\n\nProvides security events resource\n\n\nGET /api/nexus/v1/url/{location}\n\n\n\n\nParameters\n\n\n\n    \n\n        \n\n            \nParameter\n\n            \nParameter Type\n\n            \nData Type\n\n            \nRequired\n\n            \nDescription\n\n        \n\n    \n\n    \n\n        \n\n            \nlocation\n\n            \npath\n\n            \nstring\n\n            \nYes\n\n            \nEscaped URL string\n\n        \n\n    \n\n\n\n\n\n\n\nNote that URL string must be url-encoded.\n\n\n\n\nSample response body\n\n\n{\n    \nlocation\n: \nhxxp://faker.su/data/entry/steam/Steam.exe\n,\n    \ncreated\n: \n2015-04-22T13:33:27.643167Z\n,\n    \nupdated\n: \n2015-04-22T13:33:27.662668Z\n,\n    \nsources\n: [\n        \nvxvault\n\n    ],\n    \nips\n: [\n        \nhttps://cymon.io/api/nexus/v1/ip/94.75.240.108\n\n    ],\n    \ndomain\n: \nhttps://cymon.io/api/nexus/v1/domain/faker.su\n\n}\n\n\n\n\nTesting with CURL\n\n\ncurl 'https://cymon.io/api/nexus/v1/url/http%253A%252F%252Ffaker.su%252Fdata%252Fentry%252Fsteam%252FSteam.exe'\n\n\n\n\nHTTP Status Codes\n\n\n\n    \n\n        \n\n            \nStatus Code\n\n            \nReason\n\n        \n\n    \n\n    \n\n        \n\n            \n200\n\n            \nURL found in database\n\n        \n\n        \n\n            \n404\n\n            \nURL not found\n\n        \n\n        \n\n            \n429\n\n            \nRequest throttled\n\n        \n\n    \n\n\n\n\n\nPagination\n\n\nCymon API uses \"Limit-Offset\" pagination.\nThe client includes both a \"limit\" and an \"offset\" query parameter.\nThe limit indicates the maximum number of items to return. The default limit size is 10.\nThe offset indicates the starting position of the query in relation to the complete set of unpaginated items.\n\n\nRequest example:\n\n\nGET https://cymon.io/api/nexus/v1/ip/x.x.x.x/events/?limit=100\noffset=400\n\n\n\n\nResponse:\n\n\n{\n    \ncount\n: 1023,\n    \nnext\n: \nhttps://cymon.io/api/nexus/v1/ip/x.x.x.x/events/?limit=100\noffset=500\n,\n    \nprevious\n: \nhttps://cymon.io/api/nexus/v1/ip/x.x.x.x/events/?limit=100\noffset=300\n,\n    \nresults\n: [\n        ...\n    ]\n}", 
            "title": "Home"
        }, 
        {
            "location": "/#about", 
            "text": "Cymon is the largest tracker and aggregator of security reports.\nIt ingests events about malware, botnets, phishing, spam and other malicious activities from almost 200 sources daily.\nOn average, more than 15,000 unique IPs and 50,000 events are processed each day.   Cymon API v2.0  is coming soon!", 
            "title": "About"
        }, 
        {
            "location": "/#authentication", 
            "text": "Cymon allows anonymous API requests, but they will be rate-limited. You will need to authenticate if you want higher access rates.  Authenticated request made to the Cymon API needs to include your access key in the  Authorization  HTTP header.\nThe key should be prefixed by the string literal \"Token\", with whitespace separating the two strings. For example:  Authorization: Token 9944b09199c62bcf9418ad846dd0e4bbdfc6ee4b  Unauthenticated responses that are denied permission will result in an  HTTP 401 Unauthorized  response with an appropriate  WWW-Authenticate  header.\nFor example:  WWW-Authenticate: Token  The  curl  command line tool may be useful for testing token authenticated APIs. For example:  curl -X GET https://cymon.io/api/nexus/v1/blacklist/ip/malware/ -H 'Authorization: Token 9944b09199c62bcf9418ad846dd0e4bbdfc6ee4b'   You can register for an API key  here", 
            "title": "Authentication"
        }, 
        {
            "location": "/#http-status-codes", 
            "text": "Code  Description    200  Ok Success    401  Unauthorized: Access is denied due to invalid token.    404  Not Found: The request was invalid or cannot be otherwise served.    429  Too Many Requests: Rate limit exceeded.    500  API Error    Example Error Response:  HTTP 404 Not Found\nContent-Type: application/json\nVary: Accept\nAllow: GET, HEAD, OPTIONS\n\n{\n     detail :  Not found. \n}", 
            "title": "HTTP Status Codes"
        }, 
        {
            "location": "/#rate-limits", 
            "text": "Connection Type  Rate    Anonymous User  500/day    Authenticated User  1000/day     To request for a limit increase, please contact  info@cymon.io   Example Rate Limit Error:  HTTP 429\nRetry-After: 86397\nContent-Type: application/json\nVary: Accept\nAllow: GET, HEAD, OPTIONS\n\n{\n     detail :  Request was throttled. Expected available in 86397.0 seconds. \n}", 
            "title": "Rate Limits"
        }, 
        {
            "location": "/#apis", 
            "text": "You can interact and test the APIs in your browser:  https://cymon.io/api/docs/", 
            "title": "APIs"
        }, 
        {
            "location": "/#ip-lookup", 
            "text": "Provides IP object details  GET /api/nexus/v1/ip/{addr}/  Parameters  \n     \n         \n             Parameter \n             Parameter Type \n             Data Type \n             Required \n             Description \n         \n     \n     \n         \n             addr \n             path \n             string \n             Yes \n             IP address \n         \n       Sample response body  {\n     addr :  5.248.253.190 ,\n     created :  2015-06-19T22:11:26 ,\n     updated :  2015-06-19T22:11:43 ,\n     sources : [\n         pbl.spamhaus.org ,\n         zen.spamhaus.org ,\n         v6.fullbogons.cymru.com ,\n         tor.ahbl.org ,\n         dnsbl.ahbl.org ,\n         virustotal.com ,\n         urlquery.net \n    ],\n     events :  https://cymon.io/api/nexus/v1/ip/5.248.253.190/events ,\n     domains :  https://cymon.io/api/nexus/v1/ip/5.248.253.190/domains ,\n     urls :  https://cymon.io/api/nexus/v1/ip/5.248.253.190/urls \n}  HTTP Status Codes  \n     \n         \n             Status Code \n             Reason \n         \n     \n     \n         \n             200 \n             IP found in database \n         \n         \n             404 \n             IP not found \n         \n         \n             429 \n             Request throttled", 
            "title": "IP Lookup"
        }, 
        {
            "location": "/#ip-events", 
            "text": "Provides security event resources  GET /api/nexus/v1/ip/{addr}/events/  Parameters  \n     \n         \n             Parameter \n             Parameter Type \n             Data Type \n             Required \n             Description \n         \n     \n     \n         \n             addr \n             path \n             string \n             Yes \n             IP address \n         \n       Sample response body  {\n     count : 7,\n     next : null,\n     previous : null,\n     results : [\n        {\n             title :  IP blacklisted by zen.spamhaus.org ,\n             description : null,\n             details_url : null,\n             created :  2015-06-19T22:11:29 ,\n             updated :  2015-06-19T22:11:29 ,\n             tag :  dnsbl \n        },\n        {\n             title :  Malware reported by VirusTotal.com ,\n             description :  Scan date: 2015-06-19 05:35:57\\nVirusTotal score: 4/63\\nDomain: 5.248.253.190\\nMalware URL: hxxp://5.248.253.190/pod1/mobile7.exe\\n ,\n             details_url :  https://www.virustotal.com/en/ip-address/5.248.253.190/information/ ,\n             created :  2015-06-19T05:35:57 ,\n             updated :  2015-06-19T22:11:43 ,\n             tag :  malware \n        },\n        ...\n    ]\n}  HTTP Status Codes  \n     \n         \n             Status Code \n             Reason \n         \n     \n     \n         \n             200 \n             IP found in database \n         \n         \n             404 \n             IP not found \n         \n         \n             429 \n             Request throttled", 
            "title": "IP Events"
        }, 
        {
            "location": "/#ip-domains", 
            "text": "Provides domains associated with an IP  GET /api/nexus/v1/ip/{addr}/domains/  Parameters  \n     \n         \n             Parameter \n             Parameter Type \n             Data Type \n             Required \n             Description \n         \n     \n     \n         \n             addr \n             path \n             string \n             Yes \n             IP address \n         \n       Sample response body  {\n   count : 1,\n   next : null,\n   previous : null,\n   results : [\n    {\n       name :  shower-radio.com ,\n       created :  2015-10-19T16:22:58Z ,\n       updated :  2015-10-20T16:23:22Z \n    }\n  ]\n}  HTTP Status Codes  \n     \n         \n             Status Code \n             Reason \n         \n     \n     \n         \n             200 \n             IP found in database \n         \n         \n             404 \n             IP not found \n         \n         \n             429 \n             Request throttled", 
            "title": "IP Domains"
        }, 
        {
            "location": "/#ip-urls", 
            "text": "Provides URLs associated with an IP  GET /api/nexus/v1/ip/{addr}/urls/  Parameters  \n     \n         \n             Parameter \n             Parameter Type \n             Data Type \n             Required \n             Description \n         \n     \n     \n         \n             addr \n             path \n             string \n             Yes \n             IP address \n         \n       Sample response body  {\n   count : 1,\n   next : null,\n   previous : null,\n   results : [\n    {\n       location :  http://alfaqui.com/~buzon/21/09.exe ,\n       created :  2015-09-07T18:29:57Z ,\n       updated :  2015-09-07T18:29:57Z \n    }\n  ]\n}  HTTP Status Codes  \n     \n         \n             Status Code \n             Reason \n         \n     \n     \n         \n             200 \n             IP found in database \n         \n         \n             404 \n             IP not found \n         \n         \n             429 \n             Request throttled", 
            "title": "IP URLs"
        }, 
        {
            "location": "/#ip-blacklist", 
            "text": "Retrieve list of IPs that are associated with certain tag  GET /api/nexus/v1/blacklist/ip/{tag}/  Parameters  \n     \n         \n             Parameter \n             Parameter Type \n             Data Type \n             Required \n             Description \n         \n     \n     \n         \n             tag \n             path \n             string \n             Yes \n             \n            One of the following tags: \n             \n                 malware \n                 botnet \n                 spam \n                 phishing \n                 malicious activity \n                 blacklist \n                 dnsbl \n             \n             \n         \n         \n             days \n             query \n             integer \n             No \n             Use data collected since 1-3 days ago (default is 1) \n         \n       Sample response body  {\n     count : 617,\n     next :  https://cymon.io/api/nexus/v1/blacklist/ip/malware/?days=1 offset=10 ,\n     previous : null,\n     results : [\n        {\n             addr :  42.115.158.45 ,\n             url :  https://cymon.io/api/nexus/v1/ip/42.115.158.45 \n        },\n        {\n             addr :  182.16.233.188 ,\n             url :  https://cymon.io/api/nexus/v1/ip/182.16.233.188 \n        },\n        ...\n    ]\n}", 
            "title": "IP Blacklist"
        }, 
        {
            "location": "/#domain-lookup", 
            "text": "Provides domain object detail  GET /api/nexus/v1/domain/{name}  Parameters  \n     \n         \n             Parameter \n             Parameter Type \n             Data Type \n             Required \n             Description \n         \n     \n     \n         \n             name \n             path \n             string \n             Yes \n             Domain name \n         \n       Sample response body  {\n     name :  hiepkute1970.zapto.org ,\n     created :  2015-07-07T14:14:11 ,\n     updated :  2015-07-07T14:14:11 ,\n     sources : [\n         malwr.com \n    ],\n     ips : [\n         https://cymon.io/api/nexus/v1/ip/42.115.158.45 \n    ],\n     urls : []\n}", 
            "title": "Domain Lookup"
        }, 
        {
            "location": "/#domain-blacklist", 
            "text": "Retrieve list of domains that are associated with certain tag  GET /api/nexus/v1/blacklist/domain/{tag}/  Parameters  \n     \n         \n             Parameter \n             Parameter Type \n             Data Type \n             Required \n             Description \n         \n     \n     \n         \n             tag \n             path \n             string \n             Yes \n             \n            One of the following tags: \n             \n                 malware \n                 botnet \n                 spam \n                 phishing \n                 malicious activity \n                 blacklist \n                 dnsbl \n             \n             \n         \n         \n             days \n             query \n             integer \n             No \n             Use data collected since 1-3 days ago (default is 1) \n         \n       Sample response body  {\n     count : 617,\n     next :  https://cymon.io/api/nexus/v1/blacklist/domain/malware/?offset=10 ,\n     previous : null,\n     results : [\n        {\n             name :  advertblocks.vitr.alawar.com ,\n             url :  https://cymon.io/api/nexus/v1/domain/advertblocks.vitr.alawar.com \n        },\n        {\n             name :  vitr.alawar.ru ,\n             url :  https://cymon.io/api/nexus/v1/domain/vitr.alawar.ru \n        },\n        ...\n    ]\n}", 
            "title": "Domain Blacklist"
        }, 
        {
            "location": "/#url-lookup", 
            "text": "Provides security events resource  GET /api/nexus/v1/url/{location}  Parameters  \n     \n         \n             Parameter \n             Parameter Type \n             Data Type \n             Required \n             Description \n         \n     \n     \n         \n             location \n             path \n             string \n             Yes \n             Escaped URL string \n         \n        Note that URL string must be url-encoded.   Sample response body  {\n     location :  hxxp://faker.su/data/entry/steam/Steam.exe ,\n     created :  2015-04-22T13:33:27.643167Z ,\n     updated :  2015-04-22T13:33:27.662668Z ,\n     sources : [\n         vxvault \n    ],\n     ips : [\n         https://cymon.io/api/nexus/v1/ip/94.75.240.108 \n    ],\n     domain :  https://cymon.io/api/nexus/v1/domain/faker.su \n}  Testing with CURL  curl 'https://cymon.io/api/nexus/v1/url/http%253A%252F%252Ffaker.su%252Fdata%252Fentry%252Fsteam%252FSteam.exe'  HTTP Status Codes  \n     \n         \n             Status Code \n             Reason \n         \n     \n     \n         \n             200 \n             URL found in database \n         \n         \n             404 \n             URL not found \n         \n         \n             429 \n             Request throttled", 
            "title": "URL Lookup"
        }, 
        {
            "location": "/#pagination", 
            "text": "Cymon API uses \"Limit-Offset\" pagination.\nThe client includes both a \"limit\" and an \"offset\" query parameter.\nThe limit indicates the maximum number of items to return. The default limit size is 10.\nThe offset indicates the starting position of the query in relation to the complete set of unpaginated items.  Request example:  GET https://cymon.io/api/nexus/v1/ip/x.x.x.x/events/?limit=100 offset=400  Response:  {\n     count : 1023,\n     next :  https://cymon.io/api/nexus/v1/ip/x.x.x.x/events/?limit=100 offset=500 ,\n     previous :  https://cymon.io/api/nexus/v1/ip/x.x.x.x/events/?limit=100 offset=300 ,\n     results : [\n        ...\n    ]\n}", 
            "title": "Pagination"
        }, 
        {
            "location": "/apiv2/", 
            "text": "Cymon API v2.0\n\n\nThe focus of the new release is to create an easy-to-use \"threat exchange\" for Indicators of Compromise (IoC).\n\n\nNew features include:\n\n\n\n\nUsers can create their own feeds\n\n\nFeeds can be public or only shared with specific users\n\n\nFeeds can have any number of Guests, Members and Admins\n\n\nGuests have read-only access\n\n\nMembers can submit IoCs\n\n\nAdmins can change feed settings\n\n\n\n\n\n\nIoC and Feed objects can have any number of tags\n\n\nPowerful search API powered by Elasticsearch\n\n\n\n\nThe API is not generally available yet.\nWe posted the documentation early so we can get feedback from the community.\nGet in touch if you have comments: info@cymon.io\n\n\nFeeds API\n\n\nCreate Feed\n\n\nRegister a new user-feed.\n\n\n\n    \n\n        \nPath\n\n        \n/feeds/\n\n    \n\n    \n\n        \nMethod\n\n        \nPOST\n\n    \n\n    \n\n        \nAuthentication required\n\n        \nYes\n\n    \n\n\n\n\n\nRequest parameters\n\n\n\n    \n\n        \nParameter\n\n        \nType\n\n        \nRequired\n\n        \nLocation\n\n        \nDescription\n\n    \n\n    \n\n        \nfeed\n\n        \nJSON\n\n        \nYes\n\n        \nbody\n\n        \nFeed object\n\n    \n\n\n\n\n\nFeed object\n\n\n\n    \n\n        \nAttribute\n\n        \nType\n\n        \nRequired\n\n        \nDescription\n\n    \n\n    \n\n        \nname\n\n        \nstring\n\n        \nYes\n\n        \nUnique feed name (case sensitive)\n\n    \n\n    \n\n        \nlink\n\n        \nstring\n\n        \nYes\n\n        \nWebsite for more information\n\n    \n\n    \n\n        \nprivacy\n\n        \nstring\n\n        \nYes\n\n        \nValue can be \npublic\n or \nprivate\n\n    \n\n    \n\n        \ntags\n\n        \nlist of strings\n\n        \nYes\n\n        \ntags to help identify the feed\n\n    \n\n    \n\n        \nadmins\n\n        \nlist of strings\n\n        \nNo\n\n        \nUsers that can update feed\n\n    \n\n    \n\n        \nmembers\n\n        \nlist of strings\n\n        \nNo\n\n        \nUsers that can submit and read IoCs\n\n    \n\n    \n\n        \nguests\n\n        \nlist of strings\n\n        \nNo\n\n        \nUsers with read-only access\n\n    \n\n\n\n\n\n\n\nSetting a feed as \nprivate\n will only allow \nadmins\n, \nmembers\n or \nguests\n to access it.\n\n\n\n\nSample feed object\n\n\n{\n  \nname\n: \nFeed Name\n,\n  \nlink\n: \nhttps://feed-website.example.com\n,\n  \nprivacy\n: \npublic\n,\n  \ntags\n: [\nmalware\n, \nbotnet\n],\n  \nadmins\n: [\nusername1\n],\n  \nmembers\n: [\nusername2\n, \nusername3\n],\n  \nguests\n: [\nusername4\n, \nusername5\n]\n}\n\n\n\n\nSample response body\n\n\n{\nstatus\n: 200, \nmessage\n: \nfeed created\n}\n\n\n\n\nUpdate Feed\n\n\nUpdate feed details.\n\n\n\n\nNote that the \nname\n field is immutable\n\n\n\n\n\n    \n\n        \nPath\n\n        \n/feeds/\n\n    \n\n    \n\n        \nMethod\n\n        \nPUT\n\n    \n\n    \n\n        \nAuthentication required\n\n        \nYes\n\n    \n\n\n\n\n\n\n    \n\n        \nParameter\n\n        \nType\n\n        \nRequired\n\n        \nLocation\n\n        \nDescription\n\n    \n\n    \n\n        \nfeed\n\n        \nJSON\n\n        \nYes\n\n        \nbody\n\n        \nFeed object\n\n    \n\n\n\n\n\nSample feed object\n\n\n{\n  \nname\n: \nFeed Name\n,\n  \nlink\n: \nhttps://feed-website.example.com\n,\n  \nprivacy\n: \nprivate\n,\n  \ntags\n: [\nmalware\n, \nbotnet\n],\n  \nadmins\n: [\nusername1\n],\n  \nmembers\n: [\nusername2\n, \nusername3\n],\n  \nguests\n: []\n}\n\n\n\n\nSample response body\n\n\n{\nstatus\n: 200, \nmessage\n: \nfeed updated\n}\n\n\n\n\nList Feeds\n\n\nList of all feeds on Cymon.\n\n\n\n    \n\n        \nPath\n\n        \n/feeds/\n\n    \n\n    \n\n        \nMethod\n\n        \nGET\n\n    \n\n    \n\n        \nAuthentication required\n\n        \nYes\n\n    \n\n\n\n\n\nSample response body\n\n\n{\n  \nfeeds\n: [\n    \ntest\n\n  ],\n  \ntotal\n: 1,\n  \ncount\n: 1\n}\n\n\n\n\nFeed Details\n\n\nGet details for specified feed.\n\n\n\n    \n\n        \nPath\n\n        \n/feeds/{feed_name}\n\n    \n\n    \n\n        \nMethod\n\n        \nGET\n\n    \n\n    \n\n        \nAuthentication required\n\n        \nYes\n\n    \n\n\n\n\n\nRequest parameters\n\n\n\n    \n\n        \nParameter\n\n        \nType\n\n        \nRequired\n\n        \nLocation\n\n        \nDescription\n\n    \n\n    \n\n        \nfeed_name\n\n        \nString\n\n        \nYes\n\n        \npath\n\n        \nFeed name\n\n    \n\n\n\n\n\nSample response body\n\n\n{\n  \nname\n: \ntest\n,\n  \nlink\n: \nhttp://example.com\n,\n  \ntags\n: [\n    \nroy\n,\n    \ntest\n\n  ],\n  \nprivacy\n: \npublic\n\n}\n\n\n\n\nIoC API\n\n\nSubmit IoC\n\n\nReport IoC\n\n\n\n    \n\n        \nPath\n\n        \n/submit/\n\n    \n\n    \n\n        \nMethod\n\n        \nPOST\n\n    \n\n    \n\n        \nAuthentication required\n\n        \nYes\n\n    \n\n\n\n\n\nRequest parameters\n\n\n\n    \n\n        \nParameter\n\n        \nType\n\n        \nRequired\n\n        \nLocation\n\n        \nDescription\n\n    \n\n    \n\n        \nreport\n\n        \nJSON\n\n        \nYes\n\n        \nbody\n\n        \nReport object\n\n    \n\n\n\n\n\nReport object\n\n\n\n    \n\n        \nAttribute\n\n        \nType\n\n        \nRequired\n\n        \nDescription\n\n    \n\n    \n\n        \ntimestamp\n\n        \ninteger\n\n        \nYes\n\n        \nEpoch timestamp\n\n    \n\n    \n\n        \nfeed\n\n        \nstring\n\n        \nYes\n\n        \nExisting feed name\n\n    \n\n    \n\n        \ntitle\n\n        \nstring\n\n        \nYes\n\n        \nShort description\n\n    \n\n    \n\n        \ndescription\n\n        \nstring\n\n        \nNo\n\n        \nFull-text description\n\n    \n\n    \n\n        \nlink\n\n        \nstring\n\n        \nNo\n\n        \nLink for more details on this IoC\n\n    \n\n    \n\n        \ntags\n\n        \nlist of strings\n\n        \nYes\n\n        \nIoC tags\n\n    \n\n    \n\n        \niocs\n\n        \nobject\n\n        \nYes\n\n        \nIoC patterns. Accepted keys: \nipv4\n, \nipv6\n, \ndomain\n, \nhostname\n, \nurl\n, \nmd5\n, \nsha1\n, \nsha256\n, \nssdeep\n\n    \n\n\n\n\n\nYou are encouraged to use at least one of the following common tags:\n\n\n\n\nmalware\n\n\nbotnet\n\n\nphishing\n\n\nransomware\n\n\nek\n\n\nscan\n\n\nbruteforce\n\n\nmalicious activity\n\n\n\n\nYou can also include additional tags, such as malware name (eg. cryptowall) for easy searching.\n\n\nSample report object\n\n\n{\n    \nreport\n: {\n        \nfeed\n: \ntest\n,\n        \ntitle\n: \nShort IoC title text\n,\n        \ndescription\n: \nDetailed description text\n,\n        \ntimestamp\n: 1464153681,\n        \ntags\n: [\ntest\n],\n        \niocs\n: {\n            \nipv4\n: \n127.0.0.1\n,\n            \nurl\n: \nhttp://localhost\n,\n            \nhostname\n: \nlocalhost.localdomain\n\n        }\n    }\n}\n\n\n\n\nSample response body\n\n\n{\nstatus\n: 200, \nmessage\n: \nreport accepted\n}\n\n\n\n\nQuery API\n\n\nSearch by Tags\n\n\nSearch IoC reports by one or more tags.\n\n\n\n    \n\n        \nPath\n\n        \n/query/tags/{tags}\n\n    \n\n    \n\n        \nMethod\n\n        \nGET\n\n    \n\n    \n\n        \nAuthentication required\n\n        \nYes\n\n    \n\n\n\n\n\nRequest parameters\n\n\n\n    \n\n        \nParameter\n\n        \nType\n\n        \nRequired\n\n        \nLocation\n\n        \nDescription\n\n    \n\n    \n\n        \ntags\n\n        \nstring\n\n        \nYes\n\n        \npath\n\n        \nComma separated tags\n\n    \n\n\n\n\n\nSample request\n\n\nGET /query/tags/dnsbl,spam,malicious%20activity\n\n\n\n\n\n\nSpecial characters must be url-encoded\n\n\n\n\nSample response body\n\n\n{\n  \nstatus\n: 200,\n  \nhits\n: [\n    {\n      \nfeed\n: \ncbl.abuseat.org\n,\n      \ndescription\n: \n,\n      \ntags\n: [\n        \nmalicious activity\n,\n        \ndnsbl\n,\n        \nspam\n\n      ],\n      \ntimestamp\n: \n2016-06-25T16:02:47.000Z\n,\n      \niocs\n: {\n        \nipv4\n: \n91.216.107.90\n\n      },\n      \ntitle\n: \nBlacklisted by cbl.abuseat.org\n\n    },\n    ...\n  ],\n  \ntotal\n: 4,\n  \ncount\n: 4\n}\n\n\n\n\nSearch by IoC\n\n\nSearch reports by IoC.\n\n\n\n    \n\n        \nPath\n\n        \n/query/ioc/{ioc_type}/{ioc_value}\n\n    \n\n    \n\n        \nMethod\n\n        \nGET\n\n    \n\n    \n\n        \nAuthentication required\n\n        \nYes\n\n    \n\n\n\n\n\nRequest parameters\n\n\n\n    \n\n        \nParameter\n\n        \nType\n\n        \nRequired\n\n        \nLocation\n\n        \nDescription\n\n    \n\n    \n\n        \nioc_type\n\n        \nstring\n\n        \nYes\n\n        \npath\n\n        \nAccepted keys: \nipv4\n, \nipv6\n, \ndomain\n, \nhostname\n, \nurl\n, \nmd5\n, \nsha1\n, \nsha256\n, \nssdeep\n\n    \n\n    \n\n        \nioc_value\n\n        \nstring\n\n        \nYes\n\n        \npath\n\n        \nIoC value\n\n    \n\n\n\n\n\nSample request\n\n\nGET /query/ioc/ipv4/91.216.107.90\n\n\n\n\nSample response body\n\n\n{\n  \nstatus\n: 200,\n  \nhits\n: [\n    {\n      \nfeed\n: \ncbl.abuseat.org\n,\n      \ndescription\n: \n,\n      \ntags\n: [\n        \nmalicious activity\n,\n        \ndnsbl\n,\n        \nspam\n\n      ],\n      \ntimestamp\n: \n2016-06-25T16:02:47.000Z\n,\n      \niocs\n: {\n        \nipv4\n: \n91.216.107.90\n\n      },\n      \ntitle\n: \nBlacklisted by cbl.abuseat.org\n\n    },\n    ...\n  ],\n  \ntotal\n: 4,\n  \ncount\n: 4\n}\n\n\n\n\nAuthentication\n\n\nAPI access requires authentication using \nJSON Web Token (JWT)\n.\n\n\nProcess overview:\n\n\n\n\nPOST credentials to the Login API, receive token.\n\n\nSend token in header of each request, until it expires.\n\n\nRe-authenticate when token expires.\n\n\n\n\nThe following diagram shows this process:\n\n\n\n\n\n\nVisit \njwt.io\n to learn more about JSON Web Tokens\n\n\n\n\nAuthentication example:\n\n\ncurl -X POST https://api.cymon.io/auth/login \\\n-d '{\nusername\n: \nexample\n, \npassword\n: \nmonkey\n}' \\\n-H 'Content-Type: application/json'\n\n\n\n\nResponse body example:\n\n\n{\n  \njwt\n: \neyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjEzODY4OTkxMzEsImlzcyI6ImppcmE6MTU0ODk1OTUiLCJxc2giOiI4MDYzZmY0Y2ExZTQxZGY3YmM5MGM4YWI2ZDBmNjIwN2Q0OTFjZjZkYWQ3YzY2ZWE3OTdiNDYxNGI3MTkyMmU5IiwiaWF0IjoxMzg2ODk4OTUxfQ.uKqU9dTB6gKwG6jQCuXYAiMNdfNRw98Hw_IWuA5MaMo\n,\n  \nexpires\n: 1466972778,\n  \ncreated\n: 1466969178,\n  \nstatus\n: 200\n}\n\n\n\n\nAuthenticated requests made to the Cymon API need to include your token in the \nAuthorization\n HTTP header.\nThe key should be prefixed by the string literal \"Bearer\", with whitespace separating the two strings. For example:\n\n\nGET /query/tags/ransomware HTTP/1.1\nHost: api.cymon.io\nAuthorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjEzODY4OTkxMzEsImlzcyI6ImppcmE6MTU0ODk1OTUiLCJxc2giOiI4MDYzZmY0Y2ExZTQxZGY3YmM5MGM4YWI2ZDBmNjIwN2Q0OTFjZjZkYWQ3YzY2ZWE3OTdiNDYxNGI3MTkyMmU5IiwiaWF0IjoxMzg2ODk4OTUxfQ.uKqU9dTB6gKwG6jQCuXYAiMNdfNRw98Hw_IWuA5MaMo\n\n\n\n\nAuthenticated request example:\n\n\ncurl -X GET https://api.cymon.io/query/tags/ransomware \\\n-H 'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjEzODY4OTkxMzEsImlzcyI6ImppcmE6MTU0ODk1OTUiLCJxc2giOiI4MDYzZmY0Y2ExZTQxZGY3YmM5MGM4YWI2ZDBmNjIwN2Q0OTFjZjZkYWQ3YzY2ZWE3OTdiNDYxNGI3MTkyMmU5IiwiaWF0IjoxMzg2ODk4OTUxfQ.uKqU9dTB6gKwG6jQCuXYAiMNdfNRw98Hw_IWuA5MaMo'\n\n\n\n\nUnauthenticated responses that are denied permission will result in an \nHTTP 401 Unauthorized\n response with an appropriate message in the body.\nFor example:\n\n\n{\n  \nmessage\n: \nUnauthorized\n\n}\n\n\n\n\nSee full example \nhere\n.\n\n\n\n\nIf you don't have a Cymon account, you can create one \nhere\n\n\n\n\nPagination\n\n\nCymon API uses \"Limit-Offset\" pagination.\nThe client includes both a \"limit\" and an \"offset\" query parameter.\nThe limit indicates the maximum number of items to return. The max limit size is 10.\nThe offset indicates the starting position of the query in relation to the complete set of unpaginated items.\n\n\n\n\nThe free API will not return results beyond \n?offset=1000\n to help maintain the service's health\n(bulk API access is available to partners).\n\n\n\n\nRequest example:\n\n\nGET https://api.cymon.io/query/tags/malware?limit=5\noffset=5\n\n\n\n\nResponse:\n\n\n{\n    \nstatus\n: 200,\n    \ntotal\n: 10,\n    \ncount\n: 5,\n    \nhits\n: [\n        ...\n    ]\n}\n\n\n\n\nExamples\n\n\n\n\n\nNode.js example\n\n\nvar request = require('request');\n\nmodule.exports.login = function (user, pass, callback) {\n  var params = {\n    method: \nPOST\n,\n    body: {username: user, password: pass},\n    json: true,\n    url: \nhttps://api.cymon.io/auth/login\n\n  };\n  request(params, callback);\n};\n\nmodule.exports.getEventsByTag = function (token, callback) {\n  var params = {\n    method: \nGET\n,\n    url: \nhttps://api.cymon.io/query/tags/malware\n,\n    headers: {\n      Authorization: \nBearer \n + token\n    }\n  };\n  request(params, callback);\n};\n\nmodule.exports.handler = function (user, pass) {\n  // authenticate\n  exports.login(user, pass, function (error, auth_res) {\n    var token = auth_res.body.jwt;\n\n    // send API request with authorization token\n    exports.getEventsByTag(token, function (error, res) {\n      console.log(res.body);\n    });\n  });\n};\n\n\n\n\nPython example\n\n\nimport requests\nimport time\nfrom datetime import datetime\n\nclass Cymon(object):\n    def __init__(self, username, password, endpoint='https://api.cymon.io'):\n        self.endpoint = endpoint\n        self.creds = {'username': username, 'password': password}\n        self.token = None\n        self.token_expiry = None\n\n    def login(self):\n        h = {'Content-Type': 'application/json'}\n        r = requests.post(self.endpoint + '/auth/login', json=self.creds, headers=h)\n        r.raise_for_status()\n        self.token = r.json().get('jwt')\n        self.token_expiry = datetime.fromtimestamp(r.json().get('expires'))\n        return self.token\n\n    def get(self, path):\n        self.check_token()\n        h = {'Authorization': 'Bearer {}'.format(self.token)}\n        r = request.get(self.endpoint + path, headers=h)\n        r.raise_for_status()\n        return r\n\n    def post(self, path, params):\n        self.check_token()\n        h = {\n            'Authorization': 'Bearer {}'.format(self.token),\n            'Content-Type': 'application/json'\n        }\n        r = request.post(self.endpoint + path, json=params, headers=h)\n        r.raise_for_status()\n        return r\n\n    def check_token(self):\n        if self.token is None or self.token_expiry is None:\n            self.login()\n        if datetime.utcnow() \n self.token_expiry:\n            self.login()\n\n# initialize connection object\ncymon = Cymon(\nuser\n, \nmypassword\n)\n\n# create new feed\ncymon.post(\n/feeds\n, {\n    \nname\n: \nTest Feed\n,\n    \nlink\n: \nhttps://feed-website.example.com\n,\n    \nprivacy\n: \nprivate\n,\n    \ntags\n: [\nmalware\n, \nbotnet\n],\n    \nmembers\n: [\nusername1\n],\n    \nguests\n: [\nusername2\n, \nusername3\n]\n})\n\n# submit new IoC report\ncymon.post(\n/submit\n, {\n    \nreport\n: {\n        \nfeed\n: \nTest Feed\n,\n        \ntitle\n: \nIoC description text\n,\n        \ntimestamp\n: int(time.time()),\n        \ntags\n: [\ntest\n],\n        \niocs\n: {\n            \nipv4\n: \n127.0.0.1\n,\n            \nurl\n: \nhttp://localhost\n,\n            \nhostname\n: \nlocalhost.localdomain\n\n        }\n    }\n})", 
            "title": "V2"
        }, 
        {
            "location": "/apiv2/#cymon-api-v20", 
            "text": "The focus of the new release is to create an easy-to-use \"threat exchange\" for Indicators of Compromise (IoC).  New features include:   Users can create their own feeds  Feeds can be public or only shared with specific users  Feeds can have any number of Guests, Members and Admins  Guests have read-only access  Members can submit IoCs  Admins can change feed settings    IoC and Feed objects can have any number of tags  Powerful search API powered by Elasticsearch   The API is not generally available yet.\nWe posted the documentation early so we can get feedback from the community.\nGet in touch if you have comments: info@cymon.io", 
            "title": "Cymon API v2.0"
        }, 
        {
            "location": "/apiv2/#feeds-api", 
            "text": "Create Feed  Register a new user-feed.  \n     \n         Path \n         /feeds/ \n     \n     \n         Method \n         POST \n     \n     \n         Authentication required \n         Yes \n       Request parameters  \n     \n         Parameter \n         Type \n         Required \n         Location \n         Description \n     \n     \n         feed \n         JSON \n         Yes \n         body \n         Feed object \n       Feed object  \n     \n         Attribute \n         Type \n         Required \n         Description \n     \n     \n         name \n         string \n         Yes \n         Unique feed name (case sensitive) \n     \n     \n         link \n         string \n         Yes \n         Website for more information \n     \n     \n         privacy \n         string \n         Yes \n         Value can be  public  or  private \n     \n     \n         tags \n         list of strings \n         Yes \n         tags to help identify the feed \n     \n     \n         admins \n         list of strings \n         No \n         Users that can update feed \n     \n     \n         members \n         list of strings \n         No \n         Users that can submit and read IoCs \n     \n     \n         guests \n         list of strings \n         No \n         Users with read-only access \n        Setting a feed as  private  will only allow  admins ,  members  or  guests  to access it.   Sample feed object  {\n   name :  Feed Name ,\n   link :  https://feed-website.example.com ,\n   privacy :  public ,\n   tags : [ malware ,  botnet ],\n   admins : [ username1 ],\n   members : [ username2 ,  username3 ],\n   guests : [ username4 ,  username5 ]\n}  Sample response body  { status : 200,  message :  feed created }  Update Feed  Update feed details.   Note that the  name  field is immutable   \n     \n         Path \n         /feeds/ \n     \n     \n         Method \n         PUT \n     \n     \n         Authentication required \n         Yes \n       \n     \n         Parameter \n         Type \n         Required \n         Location \n         Description \n     \n     \n         feed \n         JSON \n         Yes \n         body \n         Feed object \n       Sample feed object  {\n   name :  Feed Name ,\n   link :  https://feed-website.example.com ,\n   privacy :  private ,\n   tags : [ malware ,  botnet ],\n   admins : [ username1 ],\n   members : [ username2 ,  username3 ],\n   guests : []\n}  Sample response body  { status : 200,  message :  feed updated }  List Feeds  List of all feeds on Cymon.  \n     \n         Path \n         /feeds/ \n     \n     \n         Method \n         GET \n     \n     \n         Authentication required \n         Yes \n       Sample response body  {\n   feeds : [\n     test \n  ],\n   total : 1,\n   count : 1\n}  Feed Details  Get details for specified feed.  \n     \n         Path \n         /feeds/{feed_name} \n     \n     \n         Method \n         GET \n     \n     \n         Authentication required \n         Yes \n       Request parameters  \n     \n         Parameter \n         Type \n         Required \n         Location \n         Description \n     \n     \n         feed_name \n         String \n         Yes \n         path \n         Feed name \n       Sample response body  {\n   name :  test ,\n   link :  http://example.com ,\n   tags : [\n     roy ,\n     test \n  ],\n   privacy :  public \n}", 
            "title": "Feeds API"
        }, 
        {
            "location": "/apiv2/#ioc-api", 
            "text": "Submit IoC  Report IoC  \n     \n         Path \n         /submit/ \n     \n     \n         Method \n         POST \n     \n     \n         Authentication required \n         Yes \n       Request parameters  \n     \n         Parameter \n         Type \n         Required \n         Location \n         Description \n     \n     \n         report \n         JSON \n         Yes \n         body \n         Report object \n       Report object  \n     \n         Attribute \n         Type \n         Required \n         Description \n     \n     \n         timestamp \n         integer \n         Yes \n         Epoch timestamp \n     \n     \n         feed \n         string \n         Yes \n         Existing feed name \n     \n     \n         title \n         string \n         Yes \n         Short description \n     \n     \n         description \n         string \n         No \n         Full-text description \n     \n     \n         link \n         string \n         No \n         Link for more details on this IoC \n     \n     \n         tags \n         list of strings \n         Yes \n         IoC tags \n     \n     \n         iocs \n         object \n         Yes \n         IoC patterns. Accepted keys:  ipv4 ,  ipv6 ,  domain ,  hostname ,  url ,  md5 ,  sha1 ,  sha256 ,  ssdeep \n       You are encouraged to use at least one of the following common tags:   malware  botnet  phishing  ransomware  ek  scan  bruteforce  malicious activity   You can also include additional tags, such as malware name (eg. cryptowall) for easy searching.  Sample report object  {\n     report : {\n         feed :  test ,\n         title :  Short IoC title text ,\n         description :  Detailed description text ,\n         timestamp : 1464153681,\n         tags : [ test ],\n         iocs : {\n             ipv4 :  127.0.0.1 ,\n             url :  http://localhost ,\n             hostname :  localhost.localdomain \n        }\n    }\n}  Sample response body  { status : 200,  message :  report accepted }", 
            "title": "IoC API"
        }, 
        {
            "location": "/apiv2/#query-api", 
            "text": "Search by Tags  Search IoC reports by one or more tags.  \n     \n         Path \n         /query/tags/{tags} \n     \n     \n         Method \n         GET \n     \n     \n         Authentication required \n         Yes \n       Request parameters  \n     \n         Parameter \n         Type \n         Required \n         Location \n         Description \n     \n     \n         tags \n         string \n         Yes \n         path \n         Comma separated tags \n       Sample request  GET /query/tags/dnsbl,spam,malicious%20activity   Special characters must be url-encoded   Sample response body  {\n   status : 200,\n   hits : [\n    {\n       feed :  cbl.abuseat.org ,\n       description :  ,\n       tags : [\n         malicious activity ,\n         dnsbl ,\n         spam \n      ],\n       timestamp :  2016-06-25T16:02:47.000Z ,\n       iocs : {\n         ipv4 :  91.216.107.90 \n      },\n       title :  Blacklisted by cbl.abuseat.org \n    },\n    ...\n  ],\n   total : 4,\n   count : 4\n}  Search by IoC  Search reports by IoC.  \n     \n         Path \n         /query/ioc/{ioc_type}/{ioc_value} \n     \n     \n         Method \n         GET \n     \n     \n         Authentication required \n         Yes \n       Request parameters  \n     \n         Parameter \n         Type \n         Required \n         Location \n         Description \n     \n     \n         ioc_type \n         string \n         Yes \n         path \n         Accepted keys:  ipv4 ,  ipv6 ,  domain ,  hostname ,  url ,  md5 ,  sha1 ,  sha256 ,  ssdeep \n     \n     \n         ioc_value \n         string \n         Yes \n         path \n         IoC value \n       Sample request  GET /query/ioc/ipv4/91.216.107.90  Sample response body  {\n   status : 200,\n   hits : [\n    {\n       feed :  cbl.abuseat.org ,\n       description :  ,\n       tags : [\n         malicious activity ,\n         dnsbl ,\n         spam \n      ],\n       timestamp :  2016-06-25T16:02:47.000Z ,\n       iocs : {\n         ipv4 :  91.216.107.90 \n      },\n       title :  Blacklisted by cbl.abuseat.org \n    },\n    ...\n  ],\n   total : 4,\n   count : 4\n}", 
            "title": "Query API"
        }, 
        {
            "location": "/apiv2/#authentication", 
            "text": "API access requires authentication using  JSON Web Token (JWT) .  Process overview:   POST credentials to the Login API, receive token.  Send token in header of each request, until it expires.  Re-authenticate when token expires.   The following diagram shows this process:    Visit  jwt.io  to learn more about JSON Web Tokens   Authentication example:  curl -X POST https://api.cymon.io/auth/login \\\n-d '{ username :  example ,  password :  monkey }' \\\n-H 'Content-Type: application/json'  Response body example:  {\n   jwt :  eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjEzODY4OTkxMzEsImlzcyI6ImppcmE6MTU0ODk1OTUiLCJxc2giOiI4MDYzZmY0Y2ExZTQxZGY3YmM5MGM4YWI2ZDBmNjIwN2Q0OTFjZjZkYWQ3YzY2ZWE3OTdiNDYxNGI3MTkyMmU5IiwiaWF0IjoxMzg2ODk4OTUxfQ.uKqU9dTB6gKwG6jQCuXYAiMNdfNRw98Hw_IWuA5MaMo ,\n   expires : 1466972778,\n   created : 1466969178,\n   status : 200\n}  Authenticated requests made to the Cymon API need to include your token in the  Authorization  HTTP header.\nThe key should be prefixed by the string literal \"Bearer\", with whitespace separating the two strings. For example:  GET /query/tags/ransomware HTTP/1.1\nHost: api.cymon.io\nAuthorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjEzODY4OTkxMzEsImlzcyI6ImppcmE6MTU0ODk1OTUiLCJxc2giOiI4MDYzZmY0Y2ExZTQxZGY3YmM5MGM4YWI2ZDBmNjIwN2Q0OTFjZjZkYWQ3YzY2ZWE3OTdiNDYxNGI3MTkyMmU5IiwiaWF0IjoxMzg2ODk4OTUxfQ.uKqU9dTB6gKwG6jQCuXYAiMNdfNRw98Hw_IWuA5MaMo  Authenticated request example:  curl -X GET https://api.cymon.io/query/tags/ransomware \\\n-H 'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjEzODY4OTkxMzEsImlzcyI6ImppcmE6MTU0ODk1OTUiLCJxc2giOiI4MDYzZmY0Y2ExZTQxZGY3YmM5MGM4YWI2ZDBmNjIwN2Q0OTFjZjZkYWQ3YzY2ZWE3OTdiNDYxNGI3MTkyMmU5IiwiaWF0IjoxMzg2ODk4OTUxfQ.uKqU9dTB6gKwG6jQCuXYAiMNdfNRw98Hw_IWuA5MaMo'  Unauthenticated responses that are denied permission will result in an  HTTP 401 Unauthorized  response with an appropriate message in the body.\nFor example:  {\n   message :  Unauthorized \n}  See full example  here .   If you don't have a Cymon account, you can create one  here", 
            "title": "Authentication"
        }, 
        {
            "location": "/apiv2/#pagination", 
            "text": "Cymon API uses \"Limit-Offset\" pagination.\nThe client includes both a \"limit\" and an \"offset\" query parameter.\nThe limit indicates the maximum number of items to return. The max limit size is 10.\nThe offset indicates the starting position of the query in relation to the complete set of unpaginated items.   The free API will not return results beyond  ?offset=1000  to help maintain the service's health\n(bulk API access is available to partners).   Request example:  GET https://api.cymon.io/query/tags/malware?limit=5 offset=5  Response:  {\n     status : 200,\n     total : 10,\n     count : 5,\n     hits : [\n        ...\n    ]\n}", 
            "title": "Pagination"
        }, 
        {
            "location": "/apiv2/#examples", 
            "text": "Node.js example  var request = require('request');\n\nmodule.exports.login = function (user, pass, callback) {\n  var params = {\n    method:  POST ,\n    body: {username: user, password: pass},\n    json: true,\n    url:  https://api.cymon.io/auth/login \n  };\n  request(params, callback);\n};\n\nmodule.exports.getEventsByTag = function (token, callback) {\n  var params = {\n    method:  GET ,\n    url:  https://api.cymon.io/query/tags/malware ,\n    headers: {\n      Authorization:  Bearer   + token\n    }\n  };\n  request(params, callback);\n};\n\nmodule.exports.handler = function (user, pass) {\n  // authenticate\n  exports.login(user, pass, function (error, auth_res) {\n    var token = auth_res.body.jwt;\n\n    // send API request with authorization token\n    exports.getEventsByTag(token, function (error, res) {\n      console.log(res.body);\n    });\n  });\n};  Python example  import requests\nimport time\nfrom datetime import datetime\n\nclass Cymon(object):\n    def __init__(self, username, password, endpoint='https://api.cymon.io'):\n        self.endpoint = endpoint\n        self.creds = {'username': username, 'password': password}\n        self.token = None\n        self.token_expiry = None\n\n    def login(self):\n        h = {'Content-Type': 'application/json'}\n        r = requests.post(self.endpoint + '/auth/login', json=self.creds, headers=h)\n        r.raise_for_status()\n        self.token = r.json().get('jwt')\n        self.token_expiry = datetime.fromtimestamp(r.json().get('expires'))\n        return self.token\n\n    def get(self, path):\n        self.check_token()\n        h = {'Authorization': 'Bearer {}'.format(self.token)}\n        r = request.get(self.endpoint + path, headers=h)\n        r.raise_for_status()\n        return r\n\n    def post(self, path, params):\n        self.check_token()\n        h = {\n            'Authorization': 'Bearer {}'.format(self.token),\n            'Content-Type': 'application/json'\n        }\n        r = request.post(self.endpoint + path, json=params, headers=h)\n        r.raise_for_status()\n        return r\n\n    def check_token(self):\n        if self.token is None or self.token_expiry is None:\n            self.login()\n        if datetime.utcnow()   self.token_expiry:\n            self.login()\n\n# initialize connection object\ncymon = Cymon( user ,  mypassword )\n\n# create new feed\ncymon.post( /feeds , {\n     name :  Test Feed ,\n     link :  https://feed-website.example.com ,\n     privacy :  private ,\n     tags : [ malware ,  botnet ],\n     members : [ username1 ],\n     guests : [ username2 ,  username3 ]\n})\n\n# submit new IoC report\ncymon.post( /submit , {\n     report : {\n         feed :  Test Feed ,\n         title :  IoC description text ,\n         timestamp : int(time.time()),\n         tags : [ test ],\n         iocs : {\n             ipv4 :  127.0.0.1 ,\n             url :  http://localhost ,\n             hostname :  localhost.localdomain \n        }\n    }\n})", 
            "title": "Examples"
        }, 
        {
            "location": "/clients/", 
            "text": "Client Libraries\n\n\nPython\n\n\ncymon-python\n\n\nSimple client for Nexus APIs.\n\n\nSource: \nhttps://github.com/eSentire/cymon-python\n\n\nInstall using pip\n\n\npip install cymon\n\n\n\n\nInstall from source\n\n\npython ./setup.py install\n\n\n\n\nslumber\n\n\nSlumber is a python library that provides a convenient yet powerful object orientated interface to ReSTful APIs. It acts as a wrapper around the excellent requests library and abstracts away the handling of urls, serialization, and processing requests.\n\n\nSource: \nhttps://github.com/samgiles/slumber\n\n\nUsage example:\n\n\n import slumber\n\n ## Connect to https://cymon.io/api/nexus/v1/ with no authentication\n\n api = slumber.API(\nhttps://cymon.io/api/nexus/v1/\n)\n\n ## GET https://cymon.io/api/nexus/v1/ip/1.1.1.1\n\n api.ip('1.1.1.1').get()\n\n ## GET https://cymon.io/api/nexus/v1/ip/1.1.1.1/events\n\n api.ip('1.1.1.1').events().get()", 
            "title": "Clients"
        }, 
        {
            "location": "/clients/#client-libraries", 
            "text": "", 
            "title": "Client Libraries"
        }, 
        {
            "location": "/clients/#python", 
            "text": "cymon-python  Simple client for Nexus APIs.  Source:  https://github.com/eSentire/cymon-python  Install using pip  pip install cymon  Install from source  python ./setup.py install  slumber  Slumber is a python library that provides a convenient yet powerful object orientated interface to ReSTful APIs. It acts as a wrapper around the excellent requests library and abstracts away the handling of urls, serialization, and processing requests.  Source:  https://github.com/samgiles/slumber  Usage example:   import slumber  ## Connect to https://cymon.io/api/nexus/v1/ with no authentication  api = slumber.API( https://cymon.io/api/nexus/v1/ )  ## GET https://cymon.io/api/nexus/v1/ip/1.1.1.1  api.ip('1.1.1.1').get()  ## GET https://cymon.io/api/nexus/v1/ip/1.1.1.1/events  api.ip('1.1.1.1').events().get()", 
            "title": "Python"
        }
    ]
}